<%- include("../partials/header") %>

<h1>Reports Heatmap</h1>
<div id="heatmap" style="height:500px; width:100%; border:1px solid #ddd; border-radius:6px;"></div>

<link
  rel="stylesheet"
  href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
/>
<script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
<script src="https://unpkg.com/leaflet.heat/dist/leaflet-heat.js"></script>

<script>
document.addEventListener("DOMContentLoaded", async function () {
  const map = L.map("heatmap").setView([28.6139, 77.2090], 13);

  L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
    maxZoom: 19,
  }).addTo(map);

  const response = await fetch("/reports/heatmap");
  const points = await response.json();

  L.heatLayer(points, {
    radius: 25,
    blur: 15,
    maxZoom: 17,
  }).addTo(map);
});
document.addEventListener("DOMContentLoaded", async function () {
  const map = L.map("heatmap").setView([28.6139, 77.2090], 12);

  L.tileLayer("https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png", {
    maxZoom: 19,
  }).addTo(map);

  const response = await fetch("/reports/heatmap");
  const points = await response.json();

  // Separate heat layers by priority/status
  const highPriority = [];
  const normalPriority = [];
  const fixedReports = [];

  points.forEach(p => {
    if (p.status === "fixed") {
      fixedReports.push([p.lat, p.lng, 1]);
    } else if (p.priority === "high") {
      highPriority.push([p.lat, p.lng, 1.5]);
    } else {
      normalPriority.push([p.lat, p.lng, 1]);
    }
  });

  // Red heat for high priority
  L.heatLayer(highPriority, {
    radius: 70,
    blur: 30,
    maxZoom: 17,
    gradient: {0.4: 'red', 0.65: 'orange', 1: 'yellow'}
  }).addTo(map);

  // Blue heat for normal priority
  L.heatLayer(normalPriority, {
    radius: 20,
    blur: 15,
    maxZoom: 17,
    gradient: {0.4: 'blue', 0.65: 'cyan', 1: 'lightblue'}
  }).addTo(map);

  // Green markers for fixed reports
  fixedReports.forEach(f => {
    L.circleMarker([f[0], f[1]], {
      radius: 6,
      color: "green",
      fillColor: "green",
      fillOpacity: 0.7
    }).addTo(map).bindPopup("âœ… Fixed Report");
  });
});
  // Legend Control
  const legend = L.control({ position: "bottomright" });

  legend.onAdd = function () {
    const div = L.DomUtil.create("div", "info legend");
    div.innerHTML = `
      <h6>Report Status</h6>
      <i style="background:red"></i> High Priority<br>
      <i style="background:blue"></i> Normal<br>
      <i style="background:green"></i> Fixed
    `;
    return div;
  };

  legend.addTo(map);


</script>
<style>
.legend {
  background: white;
  padding: 8px;
  border-radius: 5px;
  line-height: 18px;
  color: #333;
  box-shadow: 0 0 5px rgba(0,0,0,0.3);
}
.legend i {
  width: 14px;
  height: 14px;
  float: left;
  margin-right: 8px;
  opacity: 0.7;
}
</style>

<%- include("../partials/footer") %>
